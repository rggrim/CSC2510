When you commit, the updates exist on the local devoie in your .git file
commit - save to your local repository, in your .git file
push - save to shared repository (server)
pull/fetch - check for updates
squash - shove all the commits together, and you can no longer access the commit history or revert commits
remote repository - any repository that is not your local repo, including repos on other collaborator's devices and the shared gitHub repo

four ways to resolve conflicts when pushing to origin
 - accept your own (resolve with mine)
 - resolve with theirs
 - resolve with both                    # how does this work???
 - resolve with none (get rid of both)

When working with different branches, you can create a merge commit
back into the main branch. This saves the merge to your local repo.


BASH COMMANDS
pwd - Print Working Directory
ls -  shows every file in the directory except for hidden files
ls -a     - shows every file, INCLUDING hidden files
ls -ltr   - shows your permissions, w for write, d is for denied, x for execute, r is for read
            also shows the name of the owner, file size, modification date and time,
            and file name
clear - clears your screen